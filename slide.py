import random

p = [[-35, -32, 0], [0, 0, 0], [1, 0, 31], [2, 0, 61], [2, -1, 66], [3, -1, 67], [4, -1, 74], [5, -1, 75], [6, -1, 78],
     [7, -1, 81], [8, -1, 84], [9, -1, 87], [10, -1, 89], [11, -1, 92], [12, -1, 95], [13, -1, 97], [14, -1, 100],
     [15, -1, 104], [16, -1, 104], [17, -1, 106], [18, -1, 108], [19, -1, 109], [21, -1, 112], [22, -1, 114],
     [23, -1, 116], [24, -1, 118], [24, 0, 119], [25, 0, 120], [27, 0, 122], [28, 0, 124], [29, 0, 125], [32, 0, 129],
     [33, 0, 130], [34, 0, 131], [35, 1, 132], [36, 1, 134], [37, 1, 134], [39, 1, 136], [40, 1, 138], [41, 1, 139],
     [42, 1, 140], [44, 1, 141], [45, 1, 143], [46, 1, 144], [47, 1, 145], [48, 1, 146], [49, 1, 147], [51, 1, 148],
     [53, 1, 150], [55, 1, 152], [56, 1, 154], [58, 1, 155], [59, 1, 156], [60, 1, 157], [61, 1, 158], [62, 1, 159],
     [64, 1, 161], [66, 1, 163], [67, 1, 164], [68, 1, 166], [69, 1, 166], [70, 1, 167], [71, 1, 168], [73, 1, 170],
     [74, 1, 171], [75, 1, 172], [76, 1, 173], [77, 1, 174], [78, 1, 176], [80, 1, 177], [81, 1, 179], [82, 1, 180],
     [83, 1, 181], [84, 1, 182], [85, 1, 184], [86, 1, 185], [87, 1, 186], [88, 1, 188], [89, 1, 188], [90, 1, 190],
     [91, 1, 192], [92, 1, 193], [93, 1, 195], [94, 1, 198], [95, 1, 199], [96, 1, 201], [97, 1, 202], [98, 1, 204],
     [99, 1, 207], [100, 1, 209], [100, 0, 211], [101, 0, 212], [102, 0, 214], [103, 0, 217], [104, 0, 221],
     [105, 0, 222], [106, 0, 225], [107, 0, 228], [108, 0, 231], [109, 0, 234], [110, 0, 237], [111, 0, 240],
     [112, 0, 242], [113, 0, 245], [114, 0, 248], [115, 0, 249], [116, 0, 252], [117, 0, 255], [118, 0, 258],
     [119, 0, 260], [120, 0, 264], [121, 0, 266], [122, 0, 270], [123, 0, 272], [124, 0, 277], [125, 0, 283],
     [126, 0, 291], [127, 0, 312], [128, 0, 321], [129, 0, 325], [130, 1, 330], [131, 1, 336], [132, 1, 340],
     [133, 1, 346], [134, 1, 349], [134, 2, 355], [135, 2, 358], [134, 2, 489], [133, 2, 495], [132, 2, 503],
     [131, 2, 508], [130, 2, 513], [129, 2, 519], [128, 2, 526], [127, 2, 538], [126, 2, 544], [125, 2, 550],
     [124, 2, 557], [123, 2, 564], [122, 1, 571], [121, 1, 576], [120, 1, 584], [119, 1, 592], [118, 1, 628],
     [117, 1, 647], [116, 1, 664], [115, 1, 675], [114, 1, 682], [113, 1, 693], [112, 1, 716], [112, 2, 776],
     [111, 2, 777], [110, 2, 797], [110, 3, 812], [109, 3, 829], [109, 4, 857], [108, 4, 881], [107, 4, 915],
     [106, 4, 939], [106, 5, 966], [105, 5, 971], [104, 5, 977], [103, 5, 989], [102, 5, 1005], [101, 5, 1017],
     [101, 6, 1023], [101, 6, 1594]]


def generate_path(pointer, scale_factor):
     x = pointer[0]
     y = pointer[1]
     t = pointer[2]
     return [int(x * scale_factor), y, t]


def get_path(target_point):
     scale_factor = target_point / 101
     new_path = [generate_path(x, scale_factor) for x in p]
     return new_path