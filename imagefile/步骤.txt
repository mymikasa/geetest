1.切割原图
切割分为上下两张图，
上图为整个大图
下图为白色带字区域
2.打码平台
超级鹰
联众。。。
通过打码平台把切割下来的小图打码，并以
答案_随机hash.jpg
保存，一般中文，2000个不同字的情况下，一般以4-10万样本左右。
人工/机器筛选一遍样本，
机器方法，统计样本数中数量异常低的样本，或者汉字中出现了标点符号、英数的
3.通过训练工具，训练出第一个模型，取名为	question.pb,基本上有98%+的准确率就可以、
4.需要一个目标检测框架，
LabelImg标注样本
YOLO训练这个数据
样本量，一般来说，单一目标检测，200张图
通过目标检测框架训练，
预测结果一般是[y_left, x_left, height, width]
利用目标检测，对每一张图的大图的字进行定位，然后切割。

90% 90%
只要验证成功我们才保留数据

p1,p2,p3是我们自己目标检测给的坐标，无顺序关系
x1, x2,x3 打码平台返回的
x1 -> 火
x2 -> 锅
x3 -> 粉
通过接口验证，成功后，
x1 x1_x x1_y
x1_x,x1_y
p1_x < x1_x < p1_x + width
p1_y < y1_y < p1_y + height


x1位于p2区，意味着
p2 = x1 = 火

x1再p2区域内
根据[y_left, x_left, height, width]切割，直接命名 火_随机hash.jpg
90% 90%
100% 100%
90%

通过训练工具训练大图单字样本

总共三个模型，1，question 2. 目标检测
3.answer

目标检测,
darknet Yolo v3/v4 原生预测速度很快，必须要用GPU且只能再Linux机器上训练与预测
预测也必须要用GPU，并且接口只能读取本地文件，除非改c++代码重新编译才能支持numpy格式输入,模型大，意味着占GPU资源


github搜tensorflow/models
object_detection
mobilnet 模型小 占用资源小10mb 可以支持CPU预测，20ms，在同样大小的内存下开出更多并发,renet50 100mb 10倍，预测速度是resnet 50%,预测速度快了一倍，还多了10倍的并发

孪生神经网络



滑块相关

一张图中有两个阴影怎么处理

1.两个阴影不同高度
分api返回了位置高度和Api不反回高度位置，但是拼图自带位置

2.阴影同高度

边缘计算算法


